// utils 
// -----------------------------------------------------------------------------

// layout
// =============================================================================

// padding
@each $k, $v in $layout-padding-map {
  .p--#{$k} {
    @if $v == 0 {
      padding: 0 !important;
    } @else {
      padding: parseInt($v) * 1rem;
    }

  }
}

// padding top
@each $k, $v in $layout-padding-map {
  .p-t--#{$k} {
    @if $v == 0 {
      padding-top: 0 !important;
    } @else {
      padding-top: parseInt($v) * 1rem;
    }
  }
}

// padding right
@each $k, $v in $layout-padding-map {
  .p-r--#{$k} {
    @if $v == 0 {
      padding-right: 0 !important;
    } @else {
      padding-right: parseInt($v) * 1rem;
    }
  }
}

// padding bottom
@each $k, $v in $layout-padding-map {
  .p-b--#{$k} {
    @if $v == 0 {
      padding-bottom: 0 !important;
    } @else {
      padding-bottom: parseInt($v) * 1rem;
    }
  }
}

// padding left
@each $k, $v in $layout-padding-map {
  .p-l--#{$k} {
    @if $v == 0 {
      padding-left: 0 !important;
    } @else {
      padding-left: parseInt($v) * 1rem;
    }
  }
}


// margin
@each $k, $v in $layout-margin-map {
  .m--#{$k} {
    @if $v == 0 {
      margin: 0 !important;
    } @else {
      margin: parseInt($v) * 1rem;
    }

  }
}

// margin top
@each $k, $v in $layout-margin-map {
  .m-t--#{$k} {
    @if $v == 0 {
      margin-top: 0 !important;
    } @else {
      margin-top: parseInt($v) * 1rem;
    }
  }
}

// margin right
@each $k, $v in $layout-margin-map {
  .m-r--#{$k} {
    @if $v == 0 {
      margin-right: 0 !important;
    } @else {
      margin-right: parseInt($v) * 1rem;
    }
  }
}

// margin bottom
@each $k, $v in $layout-margin-map {
  .m-b--#{$k} {
    @if $v == 0 {
      margin-bottom: 0 !important;
    } @else {
      margin-bottom: parseInt($v) * 1rem;
    }
  }
}

// margin left
@each $k, $v in $layout-margin-map {
  .m-l--#{$k} {
    @if $v == 0 {
      margin-left: 0 !important;
    } @else {
      margin-left: parseInt($v) * 1rem;
    }
  }
}

